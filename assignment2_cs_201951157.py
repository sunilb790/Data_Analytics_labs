# -*- coding: utf-8 -*-
"""Assignment2_CS_201951157.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1avG_V5ln6-uD_hVnXoiQ-98RSRN_sShr
"""

import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.graphics.gofplots import qqplot

patient = pd.read_csv("/content/sample_data/JK-Allopathic-Outpatient_attendance-May-2019.csv")
fifa = pd.read_csv("/content/sample_data/Fifa_player_football_data.csv")

patient.head(10)

"""1. Compute total patient attendance for all district for all four range group and plot the bar diagram. Set the bar plot parameters for better visualization. 

"""

df1 = patient.groupby(['District']).sum()
df1.drop(['Total No. of Facilities #','No. of facilities reporting nil performance *','Performance - Overall Average **','Performance - Maximum','Performance - Minimum'],axis=1,inplace=True)
df1

df1.plot(kind='bar', stacked=False)
plt.xlabel('Districts')
plt.ylabel('No. of patients')
plt.title('Total patient attendance')
plt.yscale('log')
plt.legend(loc=(1.05,0))

""" Compute total patient attendance for all district for each Facility Type (DH, CHC and SC) for all four range groups and plot the staked bar diagram of three. Set the bar plot parameters for better visualization. 

"""

df2 = patient.groupby(['Facility Type']).sum()
df2

df2.drop(['Total No. of Facilities #','No. of facilities reporting nil performance *','Performance - Overall Average **','Performance - Maximum','Performance - Minimum'],axis=1,inplace=True)
df2

df2.plot(kind='bar', stacked=True)
plt.xlabel('Facility type')
plt.ylabel('No. of patients')
plt.title('Total patient attendance')
plt.yscale('log')
plt.legend(loc=(1.05,0))

""" Q.(3)Plot group bar plot for Performance - Overall Average of different Facility Type (DH, CHC and SC) of Anantnag, Jammu, Poonch, Reasi and Udhampur. 

"""

df3 = patient[['District','Facility Type','Performance - Overall Average **']]
df3

df3 = df3.reset_index()
idx=df3["District"].isin(['Anantnag','Jammu','Poonch','Reasi','Udhampur'])
df3=df3[idx]
df3

ax=sns.barplot(x="Performance - Overall Average **", y="Facility Type", hue="District", data=df3)
ax.set_xscale("log")
plt.legend(loc=(1.05,0))

"""Q(4). Present dot plot for Performance - Maximum of any 20 different district. Performance - Maxi mum for different Facility Type should be combined appropriately using a aggregation function for each district.

"""

df4=patient.groupby(["District","Facility Type"]).agg(count=("Performance - Maximum", 'sum'))
df4=df4.reset_index()
df4=df4.iloc[0:60]
print(df4)

sns.scatterplot(data=df4, x="count", y="District", hue="Facility Type")

fifa.head()

df5 = fifa[['Unnamed: 0','Name','Age']]
df5

sns.histplot(data=df5, x="Age")

sns.histplot(data=df5, x="Age", kde=True, color="b")

df6 = fifa
idx=df6["Club"].isin(["FC Barcelona","Chelsea","Juventus","Real Madrid"])
df6=df6[idx]
df6

sns.kdeplot(data=df6, x="Age", hue="Club")

df7 = fifa[['Unnamed: 0','Name','Value','Preferred Foot']]
df7

sns.histplot(data=df7, x="Value", hue="Preferred Foot", multiple="stack")

dt=(fifa["International Reputation"]-fifa["International Reputation"].mean())/fifa["International Reputation"].std()
dt = dt.replace([np.inf, -np.inf], np.nan).dropna(axis=0)
#dt
qqplot(dt,line='s')
plt.show()

